html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
body {
  font-family: 'NotoSansHans-Thin', 'Heiti SC', 'Microsoft Yahei', simsun, sans-serif;
}
.left {
  float: left;
}
@media screen and (max-width: 768px) {
  .left {
    float: none;
  }
}
.zero {
  display: none;
  visibility: hidden;
  width: 0;
  height: 0;
}
.purple {
  color: #584f60;
}
@media screen and (max-width: 768px) {
  .no-mobile {
    display: none !important;
    visibility: none !important;
  }
}
@media screen and (min-width: 769px) {
  .no-desktop {
    display: none;
    visibility: none;
  }
}
@media screen and (min-width: 1024px) {
  .container {
    width: 960px;
    margin: 0 auto;
    overflow: hidden;
  }
}
@media screen and (max-width: 1024px) and (min-width: 768px) {
  .container {
    width: 100%;
    padding: 10px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}
.word {
  margin-bottom: 80px;
  font-size: 16px;
  line-height: 1.6;
}
.hero {
  height: 870px;
}
@media screen and (max-width: 320px) {
  .hero {
    height: 568px;
  }
}
@media screen and (max-width: 375px) {
  .hero {
    height: 667px;
  }
}
@media screen and (max-width: 1024px) {
  .header {
    visibility: none;
    display: none;
  }
}
.header .content {
  height: 94px;
  overflow: hidden;
}
@media screen and (max-width: 1024px) and (min-width: 768px) {
  .header .content {
    width: 100%;
  }
}
@media screen and (min-width: 1024px) {
  .header .content {
    width: 960px;
    margin: 0 auto;
    overflow: hidden;
  }
}
.header .content:before,
.header .content:after {
  content: " ";
  display: table;
}
.header .content:after {
  clear: both;
}
.header .content h1.logo {
  width: 121px;
  height: 94px;
  background: url("../Images/logo.png") transparent no-repeat center center;
  text-indent: -9999px;
  margin: 0;
  float: left;
}
.header .nav {
  float: right;
}
.header .nav .active {
  padding-bottom: 6px;
  border-bottom: 1px solid #fff;
}
.header .nav ul {
  list-style: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}
.header .nav ul li {
  display: inline-block;
  line-height: 94px;
  font-size: 18px;
  margin-left: 45px;
}
.header .nav ul li a {
  text-decoration: none;
  color: #fff;
}
.colorize {
  background-color: #584f60;
  color: #fff;
}
.indexHero {
  background: url("../Images/index-hero.jpg") #393c4b no-repeat center center;
}
@media screen and (max-width: 375px) {
  .indexHero {
    background: url("../Images/mobile-hero.jpg") #393c4b no-repeat top left;
    background-size: 375px;
  }
}
.indexHero .slogan {
  position: absolute;
  top: 190px;
  color: #fff;
}
@media screen and (max-width: 768px) {
  .indexHero .slogan {
    top: 80px;
    padding: 14px;
  }
}
.indexHero .slogan .slogan-title {
  font-size: 80px;
  margin-bottom: 26px;
  line-height: 1.4;
}
.indexHero .slogan .slogan-title .en {
  font-size: 68px;
}
@media screen and (max-width: 768px) {
  .indexHero .slogan .slogan-title {
    font-size: 40px;
    line-height: 1.6;
  }
  .indexHero .slogan .slogan-title .en {
    font-size: 30px;
  }
}
.indexHero .slogan .intro {
  font-size: 20px;
  line-height: 1.8;
}
@media screen and (max-width: 768px) {
  .indexHero .slogan .intro {
    line-height: 1.4;
  }
}
.mobile-feature {
  max-width: 500px;
  margin: 50px auto;
  padding: 10px;
  border: 1px solid transparent;
  color: #929292;
}
.mobile-feature .feature {
  margin-top: 100px;
}
.mobile-feature .feature-title {
  font-size: 18px;
  color: #584f60;
}
.mobile-feature img {
  display: block;
  margin: 30px auto;
  max-width: 300px;
}
.feature-list {
  margin-top: 160px;
  margin-bottom: 200px;
}
.feature-list .feature {
  background-color: rgba(200,0,0,0.3);
  margin-bottom: 80px;
  border: 1px solid transparent;
}
.feature-list .feature .feature-content {
  color: #929292;
  position: relative;
  height: 654px;
}
@media screen and (min-width: 1024px) {
  .feature-list .feature .feature-content {
    width: 960px;
    margin: 0 auto;
    overflow: hidden;
  }
}
@media screen and (max-width: 1024px) and (min-width: 768px) {
  .feature-list .feature .feature-content {
    width: 100%;
  }
}
.feature-list .feature.feature-1 {
  background: url("../Images/feature-bg1.png") transparent no-repeat center center;
}
.feature-list .feature.feature-2 {
  background: url("../Images/feature-bg2.png") transparent no-repeat center center;
}
.feature-list .feature.feature-3 {
  background: url("../Images/feature-bg3.png") transparent no-repeat center center;
}
.feature-list .feature-wording {
  position: absolute;
  top: 190px;
  width: 270px;
}
.feature-list .feature-wording.left {
  left: 0;
}
.feature-list .feature-wording.right {
  right: 0;
}
.feature-list .feature-wording .feature-title {
  font-size: 30px;
  line-height: 1.4;
  color: #584f60;
}
.feature-list .feature-wording .feature-desc {
  font-size: 20px;
  line-height: 1.7;
}
.joinus-hero {
  margin: 68px auto 0;
  height: 710px;
  background: url("../Images/joinus.jpg") transparent no-repeat center center;
}
.joinus-hero .container {
  position: relative;
  overflow: visible;
  height: 100%;
}
.joinus-hero .container .wording {
  position: absolute;
  left: -60px;
  top: 0;
  padding-left: 60px;
  padding-right: 60px;
  font-size: 16px;
  line-height: 1.6;
  width: 334px;
  border: 0px solid transparent;
  background-color: #584f60;
  height: 100%;
  color: #fff;
}
.joinus-hero .container .wording p {
  margin-bottom: 30px;
  line-height: 1.8;
}
.joinus-hero .container .wording h2 {
  padding-top: 92px;
}
.jd {
  display: inline-block;
  float: left;
  overflow: hidden;
  width: 460px;
  margin: 0 10px;
}
.contact-hero {
  height: 710px;
  margin: 60px auto 0;
  background: url("../Images/contact-bg.jpg") transparent no-repeat center center;
}
.contact-hero .container {
  position: relative;
  overflow: visible;
}
.contact-hero .container .wording {
  position: absolute;
  left: -25px;
  top: 60px;
  border: 0px solid transparent;
  background: #584f60;
  color: #fff;
  padding: 25px;
}
.contact-hero .container .wording h2 {
  font-size: 36px;
}
.contact-hero .container .wording p {
  margin-bottom: 14px;
  line-height: 1.8;
  font-size: 16px;
  width: 425px;
}
.contact-wrapper {
  border: 0px solid transparent;
  margin-top: 145px;
  font-size: 16px;
  color: #929292;
}
.contact-wrapper h2 {
  font-weight: normal;
}
.contact-wrapper p {
  margin-top: 10px;
  margin-bottom: 10px;
}
@media screen and (max-width: 768px) {
  .contact-wrapper {
    margin-top: 45px;
  }
}
.contact-wrapper div {
  margin-bottom: 80px;
}
.contact-wrapper h2 {
  font-size: 30px;
  color: #584f60;
}
.contact-wrapper .social-network {
  margin-bottom: 0;
}
footer {
  margin-top: 268px;
  padding-top: 30px;
  padding-bottom: 30px;
  border: 1px solid transparent;
  font-size: 12px;
  background: #584f60;
  color: #fff;
  text-align: center;
}
@media screen and (max-width: 768px) {
  footer {
    margin-top: 20px;
    padding: 0;
  }
}
footer .links {
  font-size: 12px;
  display: inline-block;
}
footer .links ul {
  list-style: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  overflow: hidden;
}
@media screen and (max-width: 768px) {
  footer .links ul {
    display: block;
  }
}
footer .links ul li {
  float: left;
  border-right: 1px solid #fff;
  margin-right: -1px;
  padding: 0 20px;
}
@media screen and (max-width: 768px) {
  footer .links ul li {
    display: block;
    float: none;
    padding: 20px;
  }
}
@media screen and (max-width: 414px) {
  footer .links ul li {
    border-right: 0px solid transparent;
  }
}
footer .links ul li a {
  text-decoration: none;
  color: #fff;
}
footer .social {
  display: inline-block;
  font-size: 21px;
}
footer .social a {
  color: #ccc;
  text-decoration: none;
  display: inline-block;
}
footer .social a:visited {
  color: #ccc;
}
footer .social a:hover {
  color: #fff;
}
@media screen and (max-width: 768px) {
  footer .social {
    display: block;
  }
}
footer .social i {
  padding: 0 6px;
}
footer .copyright {
  margin: 10px 0;
}
.mobile-contact {
  width: 70%;
  margin: auto;
  text-align: center;
  padding: 10px;
}
.mobile-contact h2 {
  font-size: 20px;
}
.mobile-contact p {
  font-size: 14px;
}
.center {
  text-align: center;
}
.job-container {
  margin-top: 100px;
}
.job-descriptions .jd {
  margin-bottom: 40px;
}
.job-descriptions .jd h3 {
  color: #584f60;
}
.job-descriptions .jd li {
  line-height: 2;
  color: #929292;
}
.files.word {
  padding-top: 40px;
  color: #929292;
}
@media screen and (max-width: 768px) {
  .files.word {
    padding: 14px;
  }
}
.files.word h1 {
  color: #584f60;
}
.files.word h2 {
  color: #584f60;
  margin-top: 30px;
  font-size: 18px;
}
.mobile-screenshot {
  width: 70%;
  max-width: 320px;
}
.arrow_box_down {
  position: relative;
  background: #fff;
}
.arrow_box_down:after {
  top: 100%;
  left: 50%;
  border: solid transparent;
  content: '\0020';
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
  border-color: rgba(255,255,255,0);
  border-top-color: #fff;
  border-width: 14px;
  margin-left: -14px;
}
.wechat-link-wrapper {
  position: relative;
}
.wechat-link-wrapper .qr-code {
  position: absolute;
  top: -173px;
  left: -55px;
  border: 1px solid #584f60;
}
.wechat-link-wrapper:hover .hide {
  display: block;
}
.wechat-link-wrapper .hide {
  display: none;
}
.download:before,
.download:after {
  content: " ";
  display: table;
}
.download:after {
  clear: both;
}
@media screen and (max-width: 768px) {
  .download {
    width: 100%;
    text-align: center;
  }
}
.download .dl {
  margin: 0;
}
.download .dl a {
  display: block;
  height: 50px;
  margin-bottom: 12px;
}
@media screen and (max-width: 768px) {
  .download .dl {
    float: none;
  }
}
.download .qr-code {
  margin-left: 30px;
  float: left;
}
.download .qr-code img {
  width: 112px;
  height: 112px;
}
#qihoo-dl,
#yyb-dl {
  color: #fff;
  text-decoration: none;
  text-align: center;
  font-size: 18px;
}
#vendors a {
  height: auto;
}

/*# sourceMappingURL=data:application/json;base64,